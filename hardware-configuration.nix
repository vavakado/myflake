# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f5896390-4e7c-42af-915f-9f700b24c38e";
      fsType = "ext4";
    };

  fileSystems."/media" =
    { device = "/dev/disk/by-uuid/e5efa75f-c15e-47b5-b0e5-161357b4e541";
      fsType = "xfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/2954-79CA";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/da9219dc-ba85-4a39-a1da-e80b563a22a1"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-3f69b1efff49.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-5063b1f18514.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-8d9dd8ce6f4a.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-bd5bbd7561e4.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-e7d59664932e.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-eaf7aa7b8bc2.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s0f1.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth01f1640.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth02d4cf4.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth04ed952.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth06b7780.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth11753b1.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth11a09bc.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth2967ccd.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth4fe67b1.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth5ee4e45.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth70f39a0.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth7ece8e3.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth7ffafc4.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth939ed7b.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth9a0e565.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethb222949.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethb4b8caa.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethc0ff10a.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethc3b392c.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethcb23f18.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethcc3ac36.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethd5b5169.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethd5c9391.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethdb8b255.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethdd01cab.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethe1262e2.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethe1e34c0.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethfa5c1b2.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethfb3f32d.useDHCP = lib.mkDefault true;
  # networking.interfaces.virbr0.useDHCP = lib.mkDefault true;
  # networking.interfaces.vnet3.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp7s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.zth6rg6uue.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
